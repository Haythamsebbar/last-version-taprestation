services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app_dev
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/node_modules
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=taprestation
      - DB_USERNAME=laravel_user
      - DB_PASSWORD=laravel_password
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - laravel_network

  mysql:
    image: mysql:8.0
    container_name: laravel_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: taprestation
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - laravel_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel_phpmyadmin_dev
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: laravel_user
      PMA_PASSWORD: laravel_password
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - laravel_network

volumes:
  mysql_dev_data:

networks:
  laravel_network:
    driver: bridge